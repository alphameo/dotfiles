#!/bin/env zsh

# NOTE: ZINIT
# src: https://github.com/zdharma-continuum/zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"

source "${ZINIT_HOME}/zinit.zsh"


# NOTE:  ALIASES
alias sudo='sudo '
alias yarn='yarn --use-yarnrc "$XDG_CONFIG_HOME/yarn/config"'
alias fzf='fzf --preview "bat --color=always --style=numbers --line-range=:500 {}"'
alias pacman='pacman --color=always'
alias ldoc='lazydocker'
alias lgit='lazygit'
alias cz='chezmoi'
alias fm='yazi_filemanager'
alias nv='nvim'

# replacements
alias fetch='fastfetch'
alias ls='eza --color=always --icons=always'
alias lt='eza_tree'
alias cat='bat --style=plain --pager=never'
alias grep='rg --color=always'
# alias cd="__zoxide_z"
alias cdi="__zoxide_zi"


# NOTE: ZOXIDE

eval "$(zoxide init --cmd z zsh)"


# NOTE: FZF

eval "$(fzf --zsh)"

export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git "
export FZF_DEFAULT_OPTS="--height 50% --layout=default --border --color=hl:#2dd4bf"

export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="--preview 'bat --color=always -n --line-range :500 {}'"

export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"
export FZF_ALT_C_OPTS="--preview 'eza --icons=always --tree --color=always {} | head -200'"


# NOTE: OH-MY-POSH
eval "$(oh-my-posh init zsh --config $XDG_CONFIG_HOME/oh-my-posh/config.toml)"


# NOTE: FUNCTIONS

eza_tree() {
  EZA_TREE="eza --tree --color=always"
  PARAMS="$*"
  case "$1" in ''|*[!0-9]*)
      eval "$(printf '%s --level=1 %s\n' "$EZA_TREE" "$PARAMS")";;
  *)
      eval "$(printf '%s --level=%s\n' "$EZA_TREE" "$PARAMS")";;
  esac
}

function yazi_filemanager() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    builtin cd -- "$cwd"
  fi
  rm -f -- "$tmp"
}

# NOTE:  venv

export VENV_HOME="$HOME/.virtualenvs"
[[ -d $VENV_HOME ]] || mkdir $VENV_HOME

hvenv() {
  echo "Current venv: $VIRTUAL_ENV
USAGE:
$ hvenv                 # shows venv help
$ lsvenv                # list available venvs
$ mkvenv <myvirtualenv> # creates venv under ~/.virtualenvs/
$ venv <myvirtualenv>   # activates venv
$ deactivate            # deactivates venv
$ rmvenv <myvirtualenv> # removes venv"

}

lsvenv() {
  ls -1 $VENV_HOME
}

venv() {
  if [ $# -eq 0 ]
    then
      hvenv
    else
      source "$VENV_HOME/$1/bin/activate"
  fi
}

mkvenv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      python3 -m venv $VENV_HOME/$1
  fi
}

rmvenv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      rm -r $VENV_HOME/$1
  fi
}


# NOTE: HISTORY

# src: https://zsh.sourceforge.io/Doc/Release/Options.html#History
HISTFILEDIR="$XDG_STATE_HOME"/zsh
[ -d "$HISTFILEDIR" ] || mkdir "$HISTFILEDIR"

HISTFILE="$XDG_STATE_HOME/zsh/history"

HISTSIZE=10000
SAVEHIST=$HISTSIZE
HISTDUP=erase

# append to history
setopt appendhistory

setopt sharehistory # share history between instances and update history on the fly
setopt hist_find_no_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_ignore_all_dups # don't save duplicate commands, old commands are deleted, new are written
setopt hist_ignore_space # ignore commands starting with a space


# NOTE: ZINIT PLUGINS

# https://github.com/Aloxaf/fzf-tab
# https://github.com/zsh-users/zsh-syntax-highlighting  (see EOF)
# https://github.com/zdharma-continuum/fast-syntax-highlighting
# https://github.com/zsh-users/zsh-completions
# https://github.com/marlonrichert/zsh-autocomplete
# https://github.com/zsh-users/zsh-autosuggestions
zinit depth"1" lucid light-mode for \
		wait atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
		Aloxaf/fzf-tab \
		wait zsh-users/zsh-syntax-highlighting \
		zsh-users/zsh-completions \
		wait zsh-users/zsh-autosuggestions \


# ZSH-COMPLETIONS
autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu select

export VI_MODE_SET_CURSOR=true
export KEYTIMEOUT=1


# FZF-TAB
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza --icons=always --color=always $realpath'


# NOTE: GPG
export GPG_TTY=$(tty)

# NOTE: PRETTIER
export PRETTIERD_DEFAULT_CONFIG="$HOME/.config/nvim/utils/prettierrc.json"

# NOTE: ESLINT
export ESLINT_DEFAULT_CONFIG="$HOME/.config/nvim/utils/eslintrc.js"

# NOTE: OTHER OPTS

# file matching
setopt EXTENDED_GLOB
setopt NOMATCH

# report status of background
setopt NOTIFY

# if not running interactively, don't do anything
[[ $- != *i* ]] && return


# Change cursor shape for different vi modes.
function zle-keymap-select () {
  case $KEYMAP in
    vicmd) echo -ne "\e[1 q";; # block
    viins|main) echo -ne "\e[5 q";; # beam
  esac
}

zle -N zle-keymap-select

zle-line-init() {
  # zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
  echo -ne "\e[5 q"
}

zle -N zle-line-init
echo -ne "\e[5 q" # Use beam shape cursor on startup.

preexec() { echo -ne "\e[5 q" ;} # Use beam shape cursor for each new prompt.


# NOTE: BINDKEYS

bindkey -v                           # built-in vim mode (disable if zsh-vi-mode)
bindkey '^[[3;5~' kill-word            # ctrl+del
bindkey '^H' backward-kill-word        # ctrl+backspace
bindkey '^[[3~' delete-char            # del
bindkey '^[[107;6u' kill-whole-line    # ctrl+shift+k
bindkey '^[[H' beginning-of-line       # home
bindkey '^[[F' end-of-line             # end
bindkey '^[[1;5D' backward-word        # ctrl+left
bindkey '^[[1;5C' forward-word         # ctrl+right



### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi
