#!/bin/env zsh

# ZINIT
# src: https://github.com/zdharma-continuum/zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"

source "${ZINIT_HOME}/zinit.zsh"


# ALIASES
alias sudo='sudo '
alias yarn='yarn --use-yarnrc "$XDG_CONFIG_HOME/yarn/config"'
alias grep='grep --color=always'
alias fzf='fzf --preview "bat --color=always --style=numbers --line-range=:500 {}"'
alias pacman='pacman --color=always'

alias cz='chezmoi'
alias fetch='fastfetch'
alias ls='eza --color=always'
alias lt='eza_tree'
alias cat='bat --style=plain --pager=never'
alias fm='yazi_filemanager'


# EVALS
eval "$(zoxide init --cmd z zsh)"
eval "$(fzf --zsh)"
eval "$(oh-my-posh init zsh --config $XDG_CONFIG_HOME/oh-my-posh/custom.json)"


# FUNCTIONS

eza_tree() {
  EZA_TREE="eza --tree --color=always"
  PARAMS="$*"
  case "$1" in ''|*[!0-9]*)
      eval "$(printf '%s --level=1 %s\n' "$EZA_TREE" "$PARAMS")";;
  *)
      eval "$(printf '%s --level=%s\n' "$EZA_TREE" "$PARAMS")";;
  esac
}

function yazi_filemanager() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    builtin cd -- "$cwd"
  fi
  rm -f -- "$tmp"
}

# HISTORY
# src: https://zsh.sourceforge.io/Doc/Release/Options.html#History
HISTFILEDIR="$XDG_STATE_HOME"/zsh
[ -d "$HISTFILEDIR" ] || mkdir "$HISTFILEDIR"

HISTFILE="$XDG_STATE_HOME/zsh/history"

HISTSIZE=10000
SAVEHIST=$HISTSIZE

# append to history
setopt APPEND_HISTORY

# share history between instances and update history on the fly
setopt SHARE_HISTORY

# don't show duplicate lines
setopt HIST_FIND_NO_DUPS

# don't save duplicate commands, old commands are deleted, new are written
setopt HIST_IGNORE_ALL_DUPS

# ignore commands starting with a space
setopt HIST_IGNORE_SPACE


# ZINIT PLUGINS
# https://github.com/Aloxaf/fzf-tab
# https://github.com/zsh-users/zsh-autosuggestions
# https://github.com/zsh-users/zsh-completions
# https://github.com/marlonrichert/zsh-autocomplete
# https://github.com/zsh-users/zsh-syntax-highlighting  (see EOF)
# https://github.com/zdharma-continuum/fast-syntax-highlighting
zinit depth"1" lucid light-mode for \
		wait atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
		wait zsh-users/zsh-syntax-highlighting \
		wait zsh-users/zsh-autosuggestions \
		zsh-users/zsh-completions \
		Aloxaf/fzf-tab \

# ZSH-COMPLETIONS
autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu select

# FZF-TAB
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza --icons=always --color=always $realpath'


# OTHER
# GPG
export GPG_TTY=$(tty)

# file matching
setopt EXTENDED_GLOB
setopt NOMATCH

# report status of background
setopt NOTIFY

# if not running interactively, don't do anything
[[ $- != *i* ]] && return


# BINDKEYS
bindkey -v
bindkey '^[[3;5~' kill-word            # ctrl+del
bindkey '^H' backward-kill-word        # ctrl+backspace
bindkey '^[[3~' delete-char            # del
bindkey '^[[107;6u' kill-whole-line    # ctrl+shift+k
bindkey '^[[H' beginning-of-line       # home
bindkey '^[[F' end-of-line             # end
bindkey '^[[1;5D' backward-word        # ctrl+left
bindkey '^[[1;5C' forward-word         # ctrl+right



### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi
