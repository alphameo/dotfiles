#!/bin/env zsh

#############
### ZINIT ###
#############

# See https://github.com/zdharma-continuum/zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"

source "${ZINIT_HOME}/zinit.zsh"


###############
### ALIASES ###
###############

alias sudo='sudo '
alias yarn='yarn --use-yarnrc "$XDG_CONFIG_HOME/yarn/config"'
alias fzf='fzf --preview "bat --color=always --style=numbers --line-range=:500 {}"'
alias pacman='pacman --color=always'
alias ldoc='lazydocker'
alias lgit='lazygit'
alias cz='chezmoi'
alias fm='yazi_filemanager'
alias nv='nvim'
alias snv='sudoedit'
alias bat='bat --style=plain --pager=never'
alias rg='rg --color=always'
alias md="__zoxide_z"
alias mdi="__zoxide_zi"
alias ff='fastfetch'
alias ls='eza --color=always --icons=always'
alias lt='eza_tree'


###############
### MODULES ###
###############

eval "$(zoxide init --cmd z zsh)"

eval "$(fzf --zsh)"
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git "
export FZF_DEFAULT_OPTS="--height 50% --layout=default --border --color=hl:#2dd4bf"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="--preview 'bat --color=always -n --line-range :500 {}'"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"
export FZF_ALT_C_OPTS="--preview 'eza --icons=always --tree --color=always {} | head -200'"

eval "$(starship init zsh)"


########################
### CUSTOM FUNCTIONS ###
########################

eza_tree() {
  EZA_TREE="eza --tree --color=always"
  PARAMS="$*"
  case "$1" in ''|*[!0-9]*)
      eval "$(printf '%s --level=1 %s\n' "$EZA_TREE" "$PARAMS")";;
  *)
      eval "$(printf '%s --level=%s\n' "$EZA_TREE" "$PARAMS")";;
  esac
}

function yazi_filemanager() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    builtin cd -- "$cwd"
  fi
  rm -f -- "$tmp"
}

hvenv() {
  echo "Current venv: $VIRTUAL_ENV
USAGE:
$ hvenv                 # shows venv help
$ lsvenv                # list available venvs
$ mkvenv <myvirtualenv> # creates venv under $VENV_HOME
$ venv <myvirtualenv>   # activates venv
$ deactivate            # deactivates venv
$ rmvenv <myvirtualenv> # removes venv"
}

lsvenv() {
  ls -1 $VENV_HOME
}

venv() {
  if [ $# -eq 0 ]
    then
      hvenv
    else
      source "$VENV_HOME/$1/bin/activate"
  fi
}

mkvenv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      python3 -m venv $VENV_HOME/$1
  fi
}

rmvenv() {
  if [ $# -eq 0 ]
    then
      echo "Please provide venv name"
    else
      rm -r $VENV_HOME/$1
  fi
}


#####################
### ZINIT PLUGINS ###
#####################

# https://github.com/Aloxaf/fzf-tab
# https://github.com/zsh-users/zsh-syntax-highlighting (see EOF)
# https://github.com/zdharma-continuum/fast-syntax-highlighting
# https://github.com/zsh-users/zsh-completions
# https://github.com/marlonrichert/zsh-autocomplete
# https://github.com/zsh-users/zsh-autosuggestions
zinit depth"1" lucid light-mode for \
		wait atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
		Aloxaf/fzf-tab \
		wait zsh-users/zsh-syntax-highlighting \
		zsh-users/zsh-completions \
		wait zsh-users/zsh-autosuggestions \


# zsh-completions
autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu select

# fzf-tab
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza --icons=always --color=always $realpath'


###############
### OPTIONS ###
###############

# disbale Software Flow Control ctrl+s (to enable: stty -ixoff)
stty -ixon

# See https://zsh.sourceforge.io/Doc/Release/Options.html#History
HISTFILEDIR="$XDG_STATE_HOME"/zsh
[ -d "$HISTFILEDIR" ] || mkdir "$HISTFILEDIR"
HISTFILE="$XDG_STATE_HOME/zsh/history"

HISTSIZE=10000
SAVEHIST=$HISTSIZE

setopt APPEND_HISTORY
setopt SHARE_HISTORY # share history between instances
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS # don't save duplicate commands, old commands are deleted, new are written
setopt HIST_IGNORE_SPACE # ignore commands starting with a space

# file matching
setopt EXTENDED_GLOB
setopt NOMATCH

# report status of background
setopt NOTIFY

# Change cursor shape for different vi modes.
function zle-keymap-select zle-line-init zle-line-finish
{
  case $KEYMAP in
      vicmd)      print -n '\033[1 q';; # block cursor
      viins|main) print -n '\033[5 q';; # line cursor
  esac
}

zle -N zle-line-init
zle -N zle-line-finish
zle -N zle-keymap-select


################
### BINDKEYS ###
################

bindkey -v                           # built-in vim mode (disable if zsh-vi-mode)
export VI_MODE_SET_CURSOR=true
export KEYTIMEOUT=1

bindkey '^[[3;5~' kill-word            # ctrl+del
bindkey '^H' backward-kill-word        # ctrl+backspace
bindkey '^[[3~' delete-char            # del
bindkey '^[[107;6u' kill-whole-line    # ctrl+shift+k
bindkey '^[[H' beginning-of-line       # home
bindkey '^[[F' end-of-line             # end
bindkey '^[[1;5D' backward-word        # ctrl+left
bindkey '^[[1;5C' forward-word         # ctrl+right



### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi
